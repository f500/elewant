# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    github_username: f500
    github_repository: elewant
    github_contributor_blacklist: ['waffle-iron']
    twitter_client_id: '%env(TWITTER_CLIENT_ID)%'
    twitter_client_secret: '%env(TWITTER_CLIENT_SECRET)%'
    elewant_tweets_are_active: '%env(ELEWANT_TWEETS_ARE_ACTIVE)%'
    elewant_tweets_app_consumerkey: '%env(ELEWANT_TWEETS_APP_CONSUMERKEY)%'
    elewant_tweets_app_consumersecret: '%env(ELEWANT_TWEETS_APP_CONSUMERSECRET)%'
    elewant_tweets_app_accesstoken: '%env(ELEWANT_TWEETS_APP_ACCESSTOKEN)%'
    elewant_tweets_app_accesstokensecret: '%env(ELEWANT_TWEETS_APP_ACCESSTOKENSECRET)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Elewant,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Elewant\:
        resource: '../src/Elewant'

    Elewant\AppBundle\Controller\:
        resource: '../src/Elewant/AppBundle/Controller'
        tags: ['controller.service_arguments']

    Elewant\AppBundle\Controller\ExceptionController:
        public: true
        arguments:
            $debug: '%kernel.debug%'

    Elewant\DevelopmentBundle\Controller\:
        resource: '../src/Elewant/DevelopmentBundle/Controller'
        tags: ['controller.service_arguments']

    Elewant\Herding\Projections\HerdListing:
        public: true

    Elewant\Herding\Application\Handlers\AbandonElePHPantHandler:
        arguments: ['@herd_collection']
        tags:
          - { name: 'prooph_service_bus.herding_command_bus.route_target', message_detection: true }

    Elewant\Herding\Application\Handlers\AbandonHerdHandler:
        arguments: ['@herd_collection']
        tags:
          - { name: 'prooph_service_bus.herding_command_bus.route_target', message_detection: true }

    Elewant\Herding\Application\Handlers\AdoptElePHPantHandler:
        arguments: ['@herd_collection']
        tags:
          - { name: 'prooph_service_bus.herding_command_bus.route_target', message_detection: true }

    Elewant\Herding\Application\Handlers\DesireBreedHandler:
        arguments: ['@herd_collection']
        tags:
          - { name: 'prooph_service_bus.herding_command_bus.route_target', message_detection: true }

    Elewant\Herding\Application\Handlers\EliminateDesireForBreedHandler:
        arguments: ['@herd_collection']
        tags:
          - { name: 'prooph_service_bus.herding_command_bus.route_target', message_detection: true }

    Elewant\Herding\Application\Handlers\FormHerdHandler:
        arguments: ['@herd_collection']
        tags:
          - { name: 'prooph_service_bus.herding_command_bus.route_target', message_detection: true }

    Elewant\Herding\Application\Handlers\RenameHerdHandler:
        arguments: ['@herd_collection']
        tags:
          - { name: 'prooph_service_bus.herding_command_bus.route_target', message_detection: true }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Abraham\TwitterOAuth\TwitterOAuth:
        arguments:
            - "%elewant_tweets_app_consumerkey%"
            - "%elewant_tweets_app_consumersecret%"
            - "%elewant_tweets_app_accesstoken%"
            - "%elewant_tweets_app_accesstokensecret%"

    Elewant\AppBundle\Infrastructure\GithubContributorList:
        arguments:
            - '%github_username%'
            - '%github_repository%'
            - "@httplug.message_factory"
            - "@httplug.client"
            - '%github_contributor_blacklist%'

    Elewant\AppBundle\Service\ContributorList: '@Elewant\AppBundle\Infrastructure\GithubContributorList'
